# ⭐ 기본 컨텍스트 패스 (프로젝트 이름)
#server.servlet.context-path=/starView

# ⭐ 애플리케이션 이름 (로깅 등에서 사용)
spring.application.name=starView

# ⭐ JSP 뷰 리졸버 설정
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# ⭐ MySQL 데이터베이스 연결 설정
spring.datasource.url=jdbc:mysql://localhost:3306/starview?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.example.demo.DTO

# ⭐ 파일 업로드 디렉토리 설정 (중요: 이 경로를 실제 시스템에 존재하는 경로로 변경하세요!)
# Windows 예시: file.upload.dir=C:/starView_uploads/
# Linux/macOS 예시: file.upload.dir=/Users/youruser/starView_uploads/
file.upload.dir=C:/img

# ⭐ 정적 리소스 핸들러 추가 (업로드된 파일에 웹에서 접근할 수 있도록)
# /upload/** 경로로 요청이 오면 file.upload.dir 경로에서 파일을 찾도록 설정
# classpath:/static/ 도 유지하여 CSS/JS 등 다른 정적 파일도 접근 가능하게 함
spring.web.resources.static-locations=classpath:/static/,file:${file.upload.dir}

# (기존에 사용하던 NASA, Google Cloud API 키가 있다면 여기에 유지)
nasa.api.key=rWwYhsn6Pk8hId0haJlsjGSkw32kSmH0K0eJxszp

